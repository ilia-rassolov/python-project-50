Привет, ! Застрял на проекте 2, шаг 4.
1. Хочу уточнить правильно ли я понимаю test_generate_diff(). Создаю фикстуры - 2 input файла json и один out. Потом сравниваю строку из out с выводом generate_diff по тем же input. Так надо? Нужно ли ещё делать assert на какие-то аргументы?
2. Не проходит test_generate_diff() через poetry run pytest - не видит файлы input, хотя в файле через Run работает
3. Не срабатывает в воркфлоу установка flake8 - "Command not found: flake8". В пайчарме у меня работает, но я устанавливаю пакеты через настройки, а не в КС.
4. И вообще хотел бы понять до конца как работают команды poetry build, poetry publish --dry-run, poetry install, python3 -m pip install --force-reinstall --user dist/*.whl. Для чего каждая, и соответственно когда их уместно применять в воркфлоу
5. Насчёт paambaati. Почитал, но не понял какие команды заменяет этот экшен.
Глеб Воропаев
3 дня назад
@Илья Рассолов, добрый день
Да, все верно, этот тест должен проверять результат одного вызова generate_diff.
Учитывайте, что при вызове pytest относительный путь "." будет разрешаться в корень проекта (то есть в директорию на уровень выше, чем для модуля с тестом). Также для PyCharm рекомендую добавить отдельную цель для запуска pytest (https://www.jetbrains.com/help/pycharm/pytest.html).
Проверьте, что flake8 указан в списке зависимостей (dev группе) и в конфигурации пайплайна команда установки зависимостей ставит dev группу.
poetry build собирает пакет в формате whl (https://peps.python.org/pep-0427/), полученный артефакт ставится командой python3 -m pip install --force-reinstall --user dist/*.whl. poetry install ставит в virtualenv зависимости, указанные в poetry.lock. poetry publish --dry-run позволяет протестировать, что текущие настройки проекта позволяют опубликовать пакет в PyPI.


3. Тесты и линтер прошли. Но почему-то установились ещё каких-то 8 пакетов, которые не прописаны. Это нормально?
5. coverageCommand не отработана. У меня что-то не так с аргументами? (скрин)

Глеб Воропаев
12 часов назад
@Илья Рассолов, добрый вечер
Я пока не вижу лишних шагов – все выглядит хорошо.
Нужно убедиться, что pytest-cov указан в списке зависимостей.


Привет, @gvoropaev! Проекте 2, шаг 5 прошёл, но не совсем как хочется...
1. https://github.com/ilia-rassolov/python-project-50.git работает с фикстурами .yaml При попытке применить @pytest.mark.parametrize (закомментирован код) система не видит входящие фикстуры при вызове их в функции parsing_file
2. При вызове package-install стали появляться сообщения, хотя стоит Poetry (version 1.8.0). Вроде всё устанавливается. Стоит ли обращать внимание?


Глеб Воропаев
13 часов назад
@Илья Рассолов, добрый вечер
Проверьте правильность пути в параметризованных значениях (tests/fixtures/f1_input.yaml в тесте, но в параметризации указан tests/fixtures/f_1input.yaml). Это можно сделать, например, при помощи команд cat/less.
Попробуйте поставить пакет в отдельный venv (не используемый в проекте)

Привет, @gvoropaev! Прошу помощи в проекте 2, шаг 6
https://github.com/ilia-rassolov/python-project-50/blob/main/tests/test_users_2.py
1. Написал внутреннее представление. Как описать случай, когда значения по ключу в узлах в одном словарь, а в другом простое? Непонятно как такой случай обрабатывать в stylish, ведь словарь должен быть "развёрнут" с учётом его глубины.
2. В stylish у меня не накапливается переменная result, которая отвечает за формирование итоговой строки. Как сделать не пойму
3. В задании указано, что строку формирует generate_diff. Не пойму как её 'пришить', тем более, что она принимает у меня пути в аргументах
4. Мои принты не мешают или лучше их убирать?

